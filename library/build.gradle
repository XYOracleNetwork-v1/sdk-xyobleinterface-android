apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

group = 'network.xyo'

buildscript {
    repositories {
        jcenter()
        mavenCentral()
        mavenLocal()
        google()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.50"
        classpath "com.github.dcendents:android-maven-gradle-plugin:2.1"
    }
}

def majorVersion = 2
def minorVersion = 1

Properties versionProps = new Properties()
def versionPropsFile = file('version.properties')
if (versionPropsFile.exists())
    versionProps.load(new FileInputStream(versionPropsFile))
def code = (versionProps['VERSION_CODE'] ?: "0").toInteger() + 1
def verString = majorVersion + '.' + minorVersion + '.' + code

android {
    compileSdkVersion 28

    versionProps['VERSION_CODE'] = code.toString()
    versionProps.store(versionPropsFile.newWriter(), null)

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28
        defaultPublishConfig 'release'
        versionCode majorVersion * 100000000 + minorVersion * 1000000 + code
        versionName majorVersion + "." + minorVersion + "." + code

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'network.xyo:sdk-core-kotlin:1.1.14'
    implementation 'network.xyo:sdk-base-android:2.0.91'
    implementation 'network.xyo:sdk-ble-android:2.2.282'

    api 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.2.1'

    testImplementation 'junit:junit:4.13-beta-2'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.50"
}
repositories {
    jcenter()
    mavenCentral()
    maven {
        url 'https://jitpack.io'
    }
}

publishing {
    publications {
        Production(MavenPublication) {
            artifact("$buildDir/outputs/aar/library-release.aar")
            groupId 'network.xyo'
            artifactId 'sdk-xyobleinterface-android'
            version verString

            //The publication doesn't know about our dependencies, so we have to manually add them to the pom
            pom.withXml {
                //def dependenciesNode = asNode().appendNode('dependencies')
                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.compile.allDependencies.each {
                    if (it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    dryRun = false
    override = false
    publish = true
    pkg {
        repo = 'xyo'
        name = 'sdk-xyobleinterface-android'
        userOrg = 'xyoraclenetwork'
        licenses = ['LGPL-3.0']
        desc = 'Android Base Classes'
        vcsUrl = 'https://github.com/xyoraclenetwork/sdk-xyobleinterface-android.git'

        version {
            name = verString
            vcsTag = verString
        }
    }
    publications = ['Production']
}

//allows experimentals we are using - ignore in lint
tasks.withType(org.jetbrains.kotlin.gradle.tasks.AbstractKotlinCompile).all { task ->
    task.kotlinOptions.freeCompilerArgs += experimentalsEnabled
}
